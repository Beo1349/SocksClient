using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using TestTypeApp.Client;
using TestTypeApp.REST;

namespace TestTypeApp.Container.Forms
{
    public partial class RepForm : Form
    {
        SocksRestClient service;

        ReportConverter converter;

        ManufactureRef.ManufactureServiceClient manufactureService;
        MaterialRef.MaterialServiceClient serviceMaterial;
        CompositionRestClient serviceComposition;
        StorageRestClient storageService;
        TypeRef.TypeServiceClient serviceType;

        public RepForm()
        {
            InitializeComponent();

            service = new SocksRestClient();

            converter = new ReportConverter();

            manufactureService = new ManufactureRef.ManufactureServiceClient();

            serviceMaterial = new MaterialRef.MaterialServiceClient();

            serviceComposition = new CompositionRestClient();

            storageService = new StorageRestClient();

            serviceType = new TypeRef.TypeServiceClient();

            // This line of code is generated by Data Source Configuration Wizard
            // gridControl1.DataSource = new System.ComponentModel.BindingList<TestTypeApp.Client.RestTypes.Socks>() /* TODO: Assign the real data here.*/;
            gridControl1.DataSource = converter.toReportSocks(service.readAll());
        }
        private void button1_Click(object sender, EventArgs e)
        {
            string filename = string.Empty;
            bool showdialog = true;
            if (showdialog)
            {
                SaveFileDialog dialog = new SaveFileDialog();
                dialog.Filter = "Excel Files(.xls)|*.xls";
                if (dialog.ShowDialog() == DialogResult.OK)
                {
                    filename = dialog.FileName;
                    showdialog = false;
                }
                else
                    return;
            }
            
            gridControl1.ExportToXls(filename);
        }

        private void button2_Click(object sender, EventArgs e)
        {
            string filename = string.Empty;
            bool showdialog = true;
            if (showdialog)
            {
                SaveFileDialog dialog = new SaveFileDialog();
                dialog.Filter = "Pdf Files|*.pdf";
                if (dialog.ShowDialog() == DialogResult.OK)
                {
                    filename = dialog.FileName;
                    showdialog = false;
                }
                else
                    return;
            }

            gridControl1.ExportToPdf(filename);
        }

        private void Manufacture_Click(object sender, EventArgs e)
        {
            gridControl1.BeginUpdate();
            try
            {
                gridView1.Columns.Clear();
                gridControl1.DataSource = null;
                gridControl1.DataSource = manufactureService.readAll();
            }
            finally
            {
                gridControl1.EndUpdate();
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            gridControl1.BeginUpdate();
            try
            {
                gridView1.Columns.Clear();
                gridControl1.DataSource = null;
                gridControl1.DataSource = serviceMaterial.readAll();
            }
            finally
            {
                gridControl1.EndUpdate();
            }
        }

        private void button4_Click(object sender, EventArgs e)
        {
            gridControl1.BeginUpdate();
            try
            {
                gridView1.Columns.Clear();
                gridControl1.DataSource = null;
                gridControl1.DataSource = converter.toReportSocks(service.readAll());
            }
            finally
            {
                gridControl1.EndUpdate();
            }
        }

        private void button5_Click(object sender, EventArgs e)
        {
            gridControl1.BeginUpdate();
            try
            {
                gridView1.Columns.Clear();
                gridControl1.DataSource = null;
                gridControl1.DataSource = converter.toReportComposition(serviceComposition.readAll());
            }
            finally
            {
                gridControl1.EndUpdate();
            }
        }

        private void button6_Click(object sender, EventArgs e)
        {
            gridControl1.BeginUpdate();
            try
            {
                gridView1.Columns.Clear();
                gridControl1.DataSource = null;
                gridControl1.DataSource = converter.toReportStorage(storageService.readAll());
            }
            finally
            {
                gridControl1.EndUpdate();
            }
        }

        private void button7_Click(object sender, EventArgs e)
        {
            gridControl1.BeginUpdate();
            try
            {
                gridView1.Columns.Clear();
                gridControl1.DataSource = null;
                gridControl1.DataSource = serviceType.readAll();
            }
            finally
            {
                gridControl1.EndUpdate();
            }
        }
    }
}
